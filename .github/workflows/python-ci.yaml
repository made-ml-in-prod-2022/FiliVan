name: Python package ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Run image
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: 1.1.13

    # - name: Cache Poetry virtualenv
    #   uses: actions/cache@v1
    #   id: cache
    #   with:
    #     path: ~/.virtualenvs
    #     key: poetry-${{ hashFiles('**/poetry.lock') }}
    #     restore-keys: |
    #       poetry-${{ hashFiles('**/poetry.lock') }}

    # - name: Set Poetry config
    #   run: |
    #     poetry config settings.virtualenvs.in-project false
    #     poetry config settings.virtualenvs.path ~/.virtualenvs

    - name: Install Dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: PYTHONPATH=. poetry run python -m pytest